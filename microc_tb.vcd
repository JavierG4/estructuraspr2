$date
	Fri Nov 24 18:04:08 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module testbench $end
$var event 1 ! _s0 $end
$var wire 1 " zero $end
$var wire 1 # wez $end
$var wire 1 $ we $end
$var wire 1 % s_inm $end
$var wire 1 & s_inc $end
$var wire 6 ' Opcode [5:0] $end
$var wire 3 ( ALUOp [2:0] $end
$var reg 1 ) clk $end
$var reg 1 * reset $end
$scope module UC $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 " zero $end
$var wire 6 + opcode [5:0] $end
$var reg 3 , Op [2:0] $end
$var reg 1 & s_inc $end
$var reg 1 % s_inm $end
$var reg 1 $ we3 $end
$var reg 1 # wez $end
$upscope $end
$scope module microchip $end
$var wire 3 - ALUOp [2:0] $end
$var wire 10 . PC_nuevo [9:0] $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 & s_inc $end
$var wire 1 % s_inm $end
$var wire 1 $ we $end
$var wire 1 # wez $end
$var wire 1 " zero $end
$var wire 4 / muxsalida2 [3:0] $end
$var wire 8 0 muxsalida [7:0] $end
$var wire 8 1 WD3 [7:0] $end
$var wire 8 2 RD2 [7:0] $end
$var wire 8 3 RD1 [7:0] $end
$var wire 10 4 PC_actual [9:0] $end
$var wire 6 5 Opcode [5:0] $end
$var wire 16 6 Datum [15:0] $end
$var reg 1 7 Zero $end
$scope module aluop $end
$var wire 3 8 Op [2:0] $end
$var wire 8 9 B [7:0] $end
$var wire 8 : A [7:0] $end
$var reg 8 ; S [7:0] $end
$var reg 1 < zero $end
$upscope $end
$scope module bancoreg $end
$var wire 4 = D0 [3:0] $end
$var wire 4 > D1 [3:0] $end
$var wire 1 % s $end
$var wire 4 ? Y [3:0] $end
$upscope $end
$scope module biestable $end
$var wire 1 # carga $end
$var wire 1 ) clk $end
$var wire 1 " d $end
$var wire 1 * reset $end
$var reg 1 @ q $end
$upscope $end
$scope module memoria $end
$var wire 16 A Datum [15:0] $end
$var wire 1 ) clk $end
$var wire 10 B Address [9:0] $end
$upscope $end
$scope module muxalu $end
$var wire 8 C D1 [7:0] $end
$var wire 1 % s $end
$var wire 8 D Y [7:0] $end
$var wire 8 E D0 [7:0] $end
$upscope $end
$scope module muxpc $end
$var wire 10 F D0 [9:0] $end
$var wire 10 G D1 [9:0] $end
$var wire 10 H Y [9:0] $end
$var wire 1 & s $end
$upscope $end
$scope module pc $end
$var wire 10 I D [9:0] $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var reg 10 J Q [9:0] $end
$upscope $end
$scope module regmem $end
$var wire 4 K RA1 [3:0] $end
$var wire 4 L RA2 [3:0] $end
$var wire 4 M WA3 [3:0] $end
$var wire 8 N WD3 [7:0] $end
$var wire 1 ) clk $end
$var wire 1 $ we3 $end
$var wire 8 O RD2 [7:0] $end
$var wire 8 P RD1 [7:0] $end
$upscope $end
$scope module sumpc $end
$var wire 10 Q A [9:0] $end
$var wire 10 R B [9:0] $end
$var wire 10 S Y [9:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0xx00x1 S
b0 R
b1 Q
b0 P
b0 O
b0 N
b11 M
b11 L
b0 K
b0 J
b0xx00x1 I
b0xx00x1 H
b0xx00x1 G
b110011 F
b0 E
b0 D
b11 C
b0 B
b110011 A
0@
b0 ?
b11 >
b0 =
1<
b0 ;
b0 :
b0 9
b0 8
x7
b110011 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0xx00x1 .
b0 -
b0 ,
b0 +
1*
x)
b0 (
b0 '
0&
0%
0$
0#
x"
1!
$end
#500
0*
#200000
